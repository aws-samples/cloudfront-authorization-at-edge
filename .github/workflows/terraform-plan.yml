defaults:
  run:
    working-directory: infra

steps:
- uses: actions/checkout@v2
- uses: hashicorp/setup-terraform@v1

- name: Configure AWS credentials
  uses: aws-actions/configure-aws-credentials@v1
  with:
    aws-region: us-east-1
    role-to-assume: arn:aws:iam::796406704065:role/github_actions_terraform_role
    role-session-name: MySessionName

- name: Terraform fmt
  id: fmt
  run: terraform fmt -check
  continue-on-error: true

- name: Terraform Init
  id: init
  run: terraform init

- name: Terraform Validate
  id: validate
  run: terraform validate -no-color

- name: Terraform Plan
  id: plan
  run: terraform plan -no-color
  continue-on-error: true

- uses: actions/github-script@0.9.0
  if: github.event_name == 'pull_request'
  env:
    PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}
    script: |
      const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
      #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
      <details><summary>Show Plan</summary>
      
      \`\`\`\n
      ${process.env.PLAN}
      \`\`\`
      
      </details>
      
      *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
      github.issues.createComment({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
        body: output
      })
